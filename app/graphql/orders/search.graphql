query search($id: ID, $limit: Int = 20, $buyer: String, $seller: String, $name: String, $status: [String!]) {
  orders: models(
    per_page: $limit
    filter: {
      id: { value: $id }
      model_schema_name: { value: "order" }
      properties: [
        { name: "buyer" value: $buyer }
        { name: "seller" value: $seller }
        { name: "name" value: $name }
        { name: "c__status", value_in: $status },
      ]
    }
    sort: [
      { created_at: { order: DESC }}
    ]
  ){
    total_entries
    results {
      id
      created_at

      total_price_cents: property_int(name: "total_price_cents")
      total_shipping_cost_cents: property_int(name: "total_shipping_cost_cents")
      products_price_cents: property_int(name: "products_price_cents")
      c__status: property(name: "c__status")

      buyer: related_model(join_on_property: "buyer", foreign_property: "id" model_schema_name: "profile") {
        ...profile
      }

      seller: related_model(join_on_property: "seller", foreign_property: "id" model_schema_name: "profile") {
        ...profile
      }


      line_items: related_models(join_on_property: "id", foreign_property: "order_id", model_schema_name: "line_item") {
        id
        created_at
        item_id: property(name: "item_id")
        name: property(name: "name")
        quantity: property_int(name: "quantity")
        price_cents: property_int(name: "price_cents")
        total_price_cents: property_int(name: "total_price_cents")

        status: related_model(join_on_property: "id", foreign_property: "object_id", model_schema_name: "status" sort: { created_at: { order: ASC } }) {
          id
          created_at
          name: property(name: "fullname")
        }
        item: related_model(join_on_property: "item_id", foreign_property: "id", model_schema_name: "item") {
          id
          cover_photo_url: property(name: "cover_photo_url")
          photos: related_models(model_schema_name: "photo", join_on_property: "uuid", foreign_property: "object_uuid") {
            id
            photo: property_upload(name: "photo") {
              file_name
              url
              versions
            }
          }
        }
      }

      status: related_model(join_on_property: "id", foreign_property: "object_id", model_schema_name: "status" sort: { created_at: { order: ASC } }) {
        id
        created_at
        name: property(name: "name")
        timestamp: property(name: "timestamp")
        fullname: property(name: "fullname")
      }
    }
  }
}

fragment profile on Model {
  id
  name: property(name: "name")
  first_name: property(name: "first_name")
  last_name: property(name: "last_name")
  slug: property(name: "slug")
  uuid: property(name: "uuid")
}
